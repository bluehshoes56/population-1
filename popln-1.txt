#rty

# COMMAND ----------
# Enhanced Comprehensive Pivot Table with Full vs Non-Full Presence Analysis

comprehensive_pivot_enhanced = spark.sql("""
WITH full_presence_metrics AS (
    -- Metrics for merchants with full presence (14 months)
    SELECT 
        reference_month,
        naics3,
        COUNT(DISTINCT merchant_key) as merchants_full_presence,
        SUM(total_sales_in_window) as total_sales_full_presence,
        SUM(total_txn_in_window) as total_txn_full_presence,
        AVG(sales_per_merchant_per_active_month) as avg_sales_per_merchant_per_active_month_full,
        CASE WHEN SUM(total_txn_in_window) > 0 
             THEN SUM(total_sales_in_window) / SUM(total_txn_in_window) 
             ELSE 0 END as avg_sales_per_txn_full
    FROM merchant_window_analysis_enhanced
    WHERE presence_category = 'full_presence_14'
    GROUP BY reference_month, naics3
),
non_full_presence_metrics AS (
    -- Metrics for merchants without full presence (0-13 months)
    SELECT 
        reference_month,
        naics3,
        COUNT(DISTINCT merchant_key) as merchants_non_full_presence,
        SUM(total_sales_in_window) as total_sales_non_full_presence,
        SUM(total_txn_in_window) as total_txn_non_full_presence,
        AVG(sales_per_merchant_per_active_month) as avg_sales_per_merchant_per_active_month_non_full,
        CASE WHEN SUM(total_txn_in_window) > 0 
             THEN SUM(total_sales_in_window) / SUM(total_txn_in_window) 
             ELSE 0 END as avg_sales_per_txn_non_full
    FROM merchant_window_analysis_enhanced
    WHERE presence_category != 'full_presence_14'
    GROUP BY reference_month, naics3
),
total_metrics AS (
    -- Overall totals for reference
    SELECT 
        reference_month,
        naics3,
        COUNT(DISTINCT merchant_key) as total_merchants,
        SUM(total_sales_in_window) as total_sales_all,
        SUM(total_txn_in_window) as total_txn_all,
        AVG(sales_per_merchant_per_active_month) as avg_sales_per_merchant_per_active_month_all,
        CASE WHEN SUM(total_txn_in_window) > 0 
             THEN SUM(total_sales_in_window) / SUM(total_txn_in_window) 
             ELSE 0 END as avg_sales_per_txn_all
    FROM merchant_window_analysis_enhanced
    GROUP BY reference_month, naics3
)
SELECT 
    CONCAT(SUBSTR(CAST(tm.reference_month AS STRING), 1, 4), '-', 
           SUBSTR(CAST(tm.reference_month AS STRING), 5, 2)) as ref_month,
    tm.naics3,
    
    -- Total merchant counts
    tm.total_merchants,
    COALESCE(fp.merchants_full_presence, 0) as merchants_full_presence,
    COALESCE(nfp.merchants_non_full_presence, 0) as merchants_non_full_presence,
    
    -- Percentage breakdown
    CASE WHEN tm.total_merchants > 0 
         THEN ROUND(COALESCE(fp.merchants_full_presence, 0) * 100.0 / tm.total_merchants, 1) 
         ELSE 0 END as pct_full_presence,
    CASE WHEN tm.total_merchants > 0 
         THEN ROUND(COALESCE(nfp.merchants_non_full_presence, 0) * 100.0 / tm.total_merchants, 1) 
         ELSE 0 END as pct_non_full_presence,
    
    -- Total sales breakdown
    ROUND(tm.total_sales_all, 0) as total_sales_all,
    ROUND(COALESCE(fp.total_sales_full_presence, 0), 0) as total_sales_full_presence,
    ROUND(COALESCE(nfp.total_sales_non_full_presence, 0), 0) as total_sales_non_full_presence,
    
    -- Sales percentage breakdown
    CASE WHEN tm.total_sales_all > 0 
         THEN ROUND(COALESCE(fp.total_sales_full_presence, 0) * 100.0 / tm.total_sales_all, 1) 
         ELSE 0 END as pct_sales_full_presence,
    CASE WHEN tm.total_sales_all > 0 
         THEN ROUND(COALESCE(nfp.total_sales_non_full_presence, 0) * 100.0 / tm.total_sales_all, 1) 
         ELSE 0 END as pct_sales_non_full_presence,
    
    -- Average sales per merchant per active month (true ratios)
    ROUND(COALESCE(fp.avg_sales_per_merchant_per_active_month_full, 0), 0) as avg_sales_per_merchant_per_active_month_full,
    ROUND(COALESCE(nfp.avg_sales_per_merchant_per_active_month_non_full, 0), 0) as avg_sales_per_merchant_per_active_month_non_full,
    ROUND(tm.avg_sales_per_merchant_per_active_month_all, 0) as avg_sales_per_merchant_per_active_month_all,
    
    -- Average sales per transaction
    ROUND(COALESCE(fp.avg_sales_per_txn_full, 0), 2) as avg_sales_per_txn_full,
    ROUND(COALESCE(nfp.avg_sales_per_txn_non_full, 0), 2) as avg_sales_per_txn_non_full,
    ROUND(tm.avg_sales_per_txn_all, 2) as avg_sales_per_txn_all,
    
    -- Transaction totals
    COALESCE(fp.total_txn_full_presence, 0) as total_txn_full_presence,
    COALESCE(nfp.total_txn_non_full_presence, 0) as total_txn_non_full_presence,
    tm.total_txn_all,
    
    -- Performance ratios (Full vs Non-Full)
    CASE WHEN COALESCE(nfp.avg_sales_per_merchant_per_active_month_non_full, 0) > 0
         THEN ROUND(COALESCE(fp.avg_sales_per_merchant_per_active_month_full, 0) / 
                    COALESCE(nfp.avg_sales_per_merchant_per_active_month_non_full, 1), 2)
         ELSE NULL END as sales_ratio_full_vs_non_full,
         
    CASE WHEN COALESCE(nfp.avg_sales_per_txn_non_full, 0) > 0
         THEN ROUND(COALESCE(fp.avg_sales_per_txn_full, 0) / 
                    COALESCE(nfp.avg_sales_per_txn_non_full, 1), 2)
         ELSE NULL END as txn_ratio_full_vs_non_full

FROM total_metrics tm
LEFT JOIN full_presence_metrics fp ON tm.reference_month = fp.reference_month AND tm.naics3 = fp.naics3
LEFT JOIN non_full_presence_metrics nfp ON tm.reference_month = nfp.reference_month AND tm.naics3 = nfp.naics3
WHERE tm.total_merchants >= 50  -- Filter small categories
ORDER BY tm.reference_month DESC, tm.total_merchants DESC
""")

comprehensive_pivot_enhanced.createOrReplaceTempView("comprehensive_pivot_enhanced")

print("Comprehensive Enhanced Pivot Table:")
comprehensive_pivot_enhanced.show(30, truncate=False)

# COMMAND ----------
# Create a cleaner version with formatted numbers for better readability

comprehensive_pivot_clean = spark.sql("""
SELECT 
    ref_month,
    naics3,
    
    -- Merchant counts
    FORMAT_NUMBER(total_merchants, 0) as total_merchants,
    FORMAT_NUMBER(merchants_full_presence, 0) as merchants_full_14mo,
    FORMAT_NUMBER(merchants_non_full_presence, 0) as merchants_non_full,
    CONCAT(pct_full_presence, '%') as pct_full_presence,
    
    -- Sales totals (in millions)
    CASE 
        WHEN total_sales_all >= 1000000000 THEN CONCAT(ROUND(total_sales_all/1000000000, 1), 'B')
        WHEN total_sales_all >= 1000000 THEN CONCAT(ROUND(total_sales_all/1000000, 1), 'M')
        WHEN total_sales_all >= 1000 THEN CONCAT(ROUND(total_sales_all/1000, 1), 'K')
        ELSE FORMAT_NUMBER(total_sales_all, 0)
    END as total_sales_all_fmt,
    
    CASE 
        WHEN total_sales_full_presence >= 1000000000 THEN CONCAT(ROUND(total_sales_full_presence/1000000000, 1), 'B')
        WHEN total_sales_full_presence >= 1000000 THEN CONCAT(ROUND(total_sales_full_presence/1000000, 1), 'M')
        WHEN total_sales_full_presence >= 1000 THEN CONCAT(ROUND(total_sales_full_presence/1000, 1), 'K')
        ELSE FORMAT_NUMBER(total_sales_full_presence, 0)
    END as sales_full_14mo_fmt,
    
    CASE 
        WHEN total_sales_non_full_presence >= 1000000000 THEN CONCAT(ROUND(total_sales_non_full_presence/1000000000, 1), 'B')
        WHEN total_sales_non_full_presence >= 1000000 THEN CONCAT(ROUND(total_sales_non_full_presence/1000000, 1), 'M')
        WHEN total_sales_non_full_presence >= 1000 THEN CONCAT(ROUND(total_sales_non_full_presence/1000, 1), 'K')
        ELSE FORMAT_NUMBER(total_sales_non_full_presence, 0)
    END as sales_non_full_fmt,
    
    CONCAT(pct_sales_full_presence, '%') as pct_sales_full,
    
    -- Average sales per merchant per active month (formatted)
    CASE 
        WHEN avg_sales_per_merchant_per_active_month_full >= 1000000 THEN CONCAT(ROUND(avg_sales_per_merchant_per_active_month_full/1000000, 1), 'M')
        WHEN avg_sales_per_merchant_per_active_month_full >= 1000 THEN CONCAT(ROUND(avg_sales_per_merchant_per_active_month_full/1000, 1), 'K')
        ELSE FORMAT_NUMBER(avg_sales_per_merchant_per_active_month_full, 0)
    END as avg_sales_per_merchant_active_mo_full,
    
    CASE 
        WHEN avg_sales_per_merchant_per_active_month_non_full >= 1000000 THEN CONCAT(ROUND(avg_sales_per_merchant_per_active_month_non_full/1000000, 1), 'M')
        WHEN avg_sales_per_merchant_per_active_month_non_full >= 1000 THEN CONCAT(ROUND(avg_sales_per_merchant_per_active_month_non_full/1000, 1), 'K')
        ELSE FORMAT_NUMBER(avg_sales_per_merchant_per_active_month_non_full, 0)
    END as avg_sales_per_merchant_active_mo_non_full,
    
    -- Sales per transaction
    avg_sales_per_txn_full,
    avg_sales_per_txn_non_full,
    avg_sales_per_txn_all,
    
    -- Performance ratios
    sales_ratio_full_vs_non_full as performance_ratio_sales,
    txn_ratio_full_vs_non_full as performance_ratio_txn

FROM comprehensive_pivot_enhanced
ORDER BY ref_month DESC, total_merchants DESC
""")

comprehensive_pivot_clean.createOrReplaceTempView("comprehensive_pivot_clean")

print("Clean Formatted Comprehensive Pivot Table:")
comprehensive_pivot_clean.show(25, truncate=False)

# COMMAND ----------
# Dashboard-ready query for Azure Databricks SQL

dashboard_comprehensive_query = spark.sql("""
-- Dashboard Query: Comprehensive Merchant Analysis
-- Chart Type: Table with conditional formatting
-- Use for detailed analysis and export

SELECT 
    ref_month,
    naics3,
    total_merchants,
    merchants_full_presence as merchants_14_months,
    merchants_non_full_presence as merchants_0_13_months,
    pct_full_presence as pct_14_month_presence,
    
    -- Sales breakdown
    total_sales_all,
    total_sales_full_presence as sales_14_month_merchants,
    total_sales_non_full_presence as sales_0_13_month_merchants,
    pct_sales_full_presence as pct_sales_from_14_month,
    
    -- Key performance metrics
    avg_sales_per_merchant_per_active_month_full as avg_monthly_sales_14mo_merchants,
    avg_sales_per_merchant_per_active_month_non_full as avg_monthly_sales_0_13mo_merchants,
    avg_sales_per_txn_full as avg_sales_per_txn_14mo,
    avg_sales_per_txn_non_full as avg_sales_per_txn_0_13mo,
    
    -- Performance comparison
    sales_ratio_full_vs_non_full as sales_performance_ratio,
    
    -- Transaction volumes
    total_txn_full_presence as txn_14_month_merchants,
    total_txn_non_full_presence as txn_0_13_month_merchants

FROM comprehensive_pivot_enhanced
WHERE total_merchants >= 100  -- Focus on significant categories
ORDER BY ref_month DESC, total_merchants DESC
""")

dashboard_comprehensive_query.createOrReplaceTempView("dashboard_comprehensive_query")

print("Dashboard-Ready Comprehensive Query:")
dashboard_comprehensive_query.show(20, truncate=False)

# COMMAND ----------
