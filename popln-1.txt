# COMMAND ----------
# Backup original NAICS variables and update with aligned values

# Import required libraries
from pyspark.sql.functions import col

# First, check what columns actually exist
existing_columns = all_mids.columns
print("Available columns:", existing_columns)

# No need to create backup columns if they already exist
if "naics3_original" not in existing_columns:
    all_mids = all_mids.withColumn("naics3_original", col("naics3"))
    print("Created naics3_original backup column")
else:
    print("naics3_original already exists")

if "naics6_original" not in existing_columns:
    all_mids = all_mids.withColumn("naics6_original", col("naics6"))
    print("Created naics6_original backup column")
else:
    print("naics6_original already exists")

# Now update the original columns with aligned values
if "naics3_aligned" in existing_columns:
    all_mids = all_mids.withColumn("naics3", col("naics3_aligned"))
    print("Updated naics3 with aligned values")
else:
    print("Warning: naics3_aligned column not found, cannot update naics3")

if "naics6_aligned" in existing_columns:
    all_mids = all_mids.withColumn("naics6", col("naics6_aligned"))
    print("Updated naics6 with aligned values")
else:
    print("Warning: naics6_aligned column not found, cannot update naics6")

# Always update the view
all_mids.createOrReplaceTempView("all_merchants")
print("View updated successfully")

# Show sample of final data
print("\nSample of final data (5 rows):")
display(all_mids.select("naics3", "naics6", "naics3_original", "naics6_original").limit(5))

# COMMAND ----------
