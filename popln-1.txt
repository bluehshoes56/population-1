# COMMAND ----------
# Backup original NAICS variables and update with aligned values

# First, create backup columns for the original NAICS values
all_mids = all_mids.withColumn("naics3_original", col("naics3"))
all_mids = all_mids.withColumn("naics6_original", col("naics6"))

print("Created backup of original NAICS values in naics3_original and naics6_original columns")

# Now replace the original columns with the aligned values
all_mids = all_mids.withColumn("naics3", col("naics3_aligned"))
all_mids = all_mids.withColumn("naics6", col("naics6_aligned"))

print("Updated naics3 and naics6 columns with aligned values")

# Verify the update
sample_df = all_mids.select(
    "naics3_original", "naics3", 
    "naics6_original", "naics6"
).where(col("naics3_original") != col("naics3")).limit(10)

print("Sample of updated records where original and new values differ:")
sample_df.show(truncate=False)

# Count records that were updated
updated_naics3_count = all_mids.where(col("naics3_original") != col("naics3")).count()
updated_naics6_count = all_mids.where(col("naics6_original") != col("naics6")).count()

print(f"Updated {updated_naics3_count} records for naics3")
print(f"Updated {updated_naics6_count} records for naics6")

# Check which intermediate columns actually exist in the dataframe
existing_columns = all_mids.columns
print("Available columns:", existing_columns)

# Only try to drop columns that actually exist
columns_to_drop = []
for column in ["naics3_aligned", "naics6_aligned", "naics6_mapped", "naics3_from_naics6"]:
    if column in existing_columns:
        columns_to_drop.append(column)

print(f"Columns that will be dropped: {columns_to_drop}")

# Drop the columns if any exist to drop
if columns_to_drop:
    all_mids = all_mids.drop(*columns_to_drop)
    print("Removed intermediate processing columns")
else:
    print("No intermediate columns found to remove")

# Update the view with the new dataframe
all_mids.createOrReplaceTempView("all_merchants")

# COMMAND ----------
